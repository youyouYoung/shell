通过历史指令扩展可以修改/调用历史指令,快速完成与之前指令类似的操作指令.

注意:通过修改bash选项histverify的状态可以使历史指令在扩展完成时不会被立即执行.通过shopt可以修改.

常见的历史指令扩展方法:
1.!n
调用编号为n的历史指令

2.!-n
调用往前倒数第n个历史指令

3.!!
执行前一个历史指令.

4.!样式
执行最近一个以样式开头的历史指令

5.!?样式?
执行最近一个含有样式字符的历史指令

6.^字符串1^字符串2^
将前一个历史指令中的字符串1换成字符串2,然后执行替换后的指令.

7.!#
代表在命令行中到目前为止所键入的字符串.

8.!!:$
取得前一个命令最后一个参数

9.!command:n
找出最近一个以command开头的指令的第n个参数
注意:第一个参数也可以用^来代替.即cd !ls:^等同于cd !ls:1

10.!command:*
找出最近一个以command开头的指令的所有参数.

11.!!:3-5
找出前一个指令中介于第三到第五个字符串之间的字符串
例如 echo hs ka kw ix,其中!!:2-4就是ka kw ix

12.!!:s/字符串1/字符串2/
将前一个指令中的字符串1替换成字符串2,然后执行替换后的指令.

13.!command:s/字符串1/字符串2/
将最近一个以command开头的历史指令的字符串1替换为字符串2,然后执行.

14.!!:h
删除最后一个历史指令后面的文件名.
注意:如ls /home/youyou/kill,!!:h的结果是ls /home/youyou

15.!!:t
删除最后一个历史指令前面的目录
注意:如ls /home/youyou/kill,!!:h的结果是kill

16.!!:p
显示前一个历史指令但不执行.


历史指令中的符号已经他们的含义:
符号		含义
!		调用历史指令
!!		前一个指令
0		命令本身
1		第一个参数
^		第一个参数
$		最后一个参数
*		所有的参数
n		第n个参数
x-y		第x-y个字符串
s		替换
h		删除文件名
t		删除除文件名之外的
p		显示指令,不执行.
??		查询样式

历史指令扩展的语法
选择历史指令:操作
选择历史指令,使用!调用,根据样式或符号匹配
操作,替换,删除,查找等

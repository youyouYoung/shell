#! /bin/bash
# 功能介绍:
# 1. 启动web/redis服务器
# 2. 更新web项目文件
# 3. 查看web服务器日志

# 注意:
# 1. 在bash中, 将0定义为true, 1定义为false

## 影响程序运行方式的变量
target_host=localhost  ## 目标服务器名, 默认为localhost
target_project=""  ## 项目名称
check_message=1  ## 查看日志
launch_tomcat=1  ## 启动tomcat
replace_level=""  ## 更新方式, 有全部替换(all)/动+静替换(large)/静替换(small)

## 程序中的常量
export SUBSCRIPT_PATH=/home/yang/fast/script/gdlt  ## 辅助脚本文件位置
export LOG_MAKER=/home/yang/fast/script/gdlt/awk/log.awk  ## 创建日志的awk方法
export GDLTCONFIG=/home/yang/fast/config/gdltconfig.xml  ## 配置文件路径

## 程序从这里开始
while getopts cSsaup:h: params
do
	case $params in 
	c)
		check_message=0
		;;
	s)
		replace_level="small"
		;;
	a)
		replace_level="large"
		check_message=0
		launch_tomcat=0
		;;
	u)
		replace_level="all"
		check_message=0
		launch_tomcat=0
		;;
	p)
		target_project=$OPTARG
		;;
	h)
		target_host=$OPTARG
		;;
	S)
		launch_tomcat=0
		check_message=0
		;;
	\?)
		echo -e "用法: upgradeModulequality.sh [options] [params]"
		echo -e "\t-c --checkmessage\t 查看日志"
		echo -e "\t-s --staticonly\t\t 只替换项目中静态文件, 不重启tomcat"
		echo -e "\t-S --restartapp\t\t 强制重启应用服务器"
		echo -e "\t-a --replaceall\t\t 替换项目中所有易修改内容, 包括 com+jsps."
		echo -e "\t-u --ultimatereplace\t 将旧项目剔除, 完全替换工作路径下的内容."
		echo -e "\t-p --target_project project 将对工作路径下名称为project的项目进行更新."
		echo -e "\t-h --host\t\t 目的服务器"
		exit 0
		;;
	esac
done

## 项目名称必填
if [ -z "$target_project" ]; then
	gawk -f $LOG_MAKER -e 'BEGIN {LogMark("Error: [**gdlt**] 没有指定目标项目名称.")}'
	exit 1
fi

## 指定项目必须存在且是目录
if [ ! -d "$JAVAFILEPATH/$target_project" ]; then
	gawk -f $LOG_MAKER -e 'BEGIN {LogMark("Error: [**gdlt**] 没有在根目录['$JAVAFILEPATH']下找到目标项目['$target_project'].")}'
	exit 1
fi

## 更新项目
if [ -n "$replace_level" ]; then
	gawk -f $LOG_MAKER -e 'BEGIN {LogMark("Info: [**gdlt**] 开始为目标服务器['$target_host']更新项目['$target_project'].")}'
	$SUBSCRIPT_PATH/updatefile -h $target_host -p $target_project -t $replace_level
	
	if [ $? -ne 0 ]; then
		gawk -f $LOG_MAKER -e 'BEGIN {LogMark("Error: [**gdlt**] 项目更新失败, 错误信息请查看[**updatefile**]日志信息.")}'
		exit 1
	else
		gawk -f $LOG_MAKER -e 'BEGIN {LogMark("Info: [**gdlt**] 完成对目标服务器['$target_host']项目['$target_project']的更新任务.")}'
	fi
fi

## 没有标注启动tomcat(launch_tomcat=1)时, 如果需要查看日志信息且没检查到应用进程信息则将launch_tomcat=0
if `exit $check_message` && [ -z "`$SUBSCRIPT_PATH/process -h $target_host -p $target_project`" ]; then
	launch_tomcat=0
fi

## 启动项目程序
if `exit $launch_tomcat`; then
	gawk -f $LOG_MAKER -e 'BEGIN {LogMark("Info: [**gdlt**] 准备启动目标服务器['$target_host']中项目['$target_project']所在的应用程序.")}'

	$SUBSCRIPT_PATH/launchapp -h $target_host -p $target_project

	if [ $? -ne 0 ]; then
		gawk -f $LOG_MAKER -e 'BEGIN {LogMark("Error: [**gdlt**] 项目启动失败, 错误信息请查看[**launchapp**]日志信息.")}'
		exit 1
	else
		gawk -f $LOG_MAKER -e 'BEGIN {LogMark("Info: [**gdlt**] 成功启动目标服务器['$target_host']中对应的应用程序.")}'
	fi
fi

## 查看日志
if `exit $check_message`; then
	$SUBSCRIPT_PATH/checklog -h $target_host -p $target_project
fi

#!/bin/bash
## 用于启动本地/服务器Tomcat
## 示例 launchapp -h gd212 -p baseproject 或者 launchapp

target_host=localhost		## 服务器
target_project=""		## 项目名称

## 获取主机名
while getopts h:p: params
do
	case $params in
	h)
		target_host=$OPTARG
		;;
	p)
		target_project=$OPTARG
		;;
	esac
done

if [ -z "$target_host" ]; then
	gawk -f $LOG_MAKER -e 'BEGIN {LogMark("Error: [**launchapp**] 没有指定目标服务器.")}'
	exit 1
fi

if [ -z "$target_project" ]; then
	gawk -f $LOG_MAKER -e 'BEGIN {LogMark("Error: [**launchapp**] 没有指定目标项目名称.")}'
	exit 1
fi

## 读取配置文件中服务器信息. 如果配置文件中存在任何错误, 则在这一步就会报错
cd $SUBSCRIPT_PATH/awk ## 进入awk程序根目录
serverInfo=`gawk -f server.awk -v server=$target_host -v project=$target_project $GDLTCONFIG`

if [ $? -ne 0 ]; then
	gawk -f $LOG_MAKER -e 'BEGIN {LogMark("Error: [**launchapp**] 读取配置文件服务器信息时出错, 错误信息请查看[**server.awk**]日志信息.")}'
	exit 1
fi

for line in `echo $serverInfo`
do
	eval $line
done

if [ $target_host == "localhost" ]; then
	PIDS=`ps -ef | grep $_server_path | awk '$8 !~ /^grep/ {print $2}'`
	if [ -n "$PIDS" ]; then
		gawk -f $LOG_MAKER -e 'BEGIN {LogMark("Info: [**launchapp**] 当前应用已启动, 准备关闭进程.")}'
                for pid in $PIDS
                do
                        gawk -f $LOG_MAKER -e 'BEGIN {LogMark("Info: [**launchapp**] 开始关闭进程['$pid'].")}'
                        kill -9 $pid
			if `exit $?`; then
				gawk -f $LOG_MAKER -e 'BEGIN {LogMark("Info: [**launchapp**] 成功关闭进程['$pid'].")}'
			else
				gawk -f $LOG_MAKER -e 'BEGIN {LogMark("Info: [**launchapp**] 无法关闭进程['$pid'].")}'
			fi
                done
        fi

	## 启动tomcat
	nohup $_server_path/bin/catalina.sh run &> $_server_log &
else
	## 启动tomcat
	ssh $target_host "upgradeapp -p $target_project -l $_server_path &> $_server_log"
fi
